version: '3.8'

services:
  # PostgreSQL database with pgvector extension
  postgres:
    image: pgvector/pgvector:pg17
    environment:
      POSTGRES_DB: ai_ta_test
      POSTGRES_USER: ai_ta_user
      POSTGRES_PASSWORD: ai_ta_password
    ports:
      - "5433:5432"  # Different port to avoid conflicts
    volumes:
      - postgres_test_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ai_ta_user -d ai_ta_test"]
      interval: 5s
      timeout: 3s
      retries: 5

  # LocalStack for S3 emulation
  localstack:
    image: localstack/localstack:3.0
    environment:
      - SERVICES=s3
      - DEFAULT_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_DEFAULT_REGION=us-east-1
      - HOSTNAME_EXTERNAL=localstack
    ports:
      - "4567:4566"  # Different port to avoid conflicts
    volumes:
      - localstack_test_data:/var/lib/localstack

  # Backend API server
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=postgresql://ai_ta_user:ai_ta_password@postgres:5432/ai_ta_test
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_S3_REGION_NAME=us-east-1
      - AWS_S3_ENDPOINT_URL=http://localstack:4566
      - S3_BUCKET_NAME=ai-ta-files-test
      - CORS_ORIGINS=http://localhost:3001
      - OPENAI_API_KEY=${OPENAI_API_KEY:-dummy_key_for_testing}
    ports:
      - "8001:8000"  # Different port to avoid conflicts
    depends_on:
      postgres:
        condition: service_healthy
      localstack:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    volumes:
      - ./server/uploads:/app/uploads
      - ./server/logs:/app/logs

  # Frontend Next.js client
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8001
      - NODE_ENV=development
    ports:
      - "3001:3000"  # Different port to avoid conflicts
    depends_on:
      server:
        condition: service_healthy
    volumes:
      - ./client:/app
      - /app/node_modules
      - /app/.next

  # Traffic analytics dashboard (optional)
  analytics:
    build:
      context: ./client
      dockerfile: Dockerfile
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8001
      - NODE_ENV=development
      - NEXT_PUBLIC_ANALYTICS_MODE=true
    ports:
      - "3002:3000"  # Analytics dashboard on separate port
    depends_on:
      server:
        condition: service_healthy

volumes:
  postgres_test_data:
  localstack_test_data: